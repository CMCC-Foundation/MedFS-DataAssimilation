SUBROUTINE READOBS

!.. INTERFACE FOR READING SLA AND EN3 FILES
!.. CALLING READSLA AND READEN3V1D, WHICH ARE INTENDED
!.. FOR A MORE GENERIC (READ: POTENTIALLY EXTERNAL)
!.. READING OF OBSERVATIONAL NETCDF FILES
!..
!.. ANDREA STORTO, *INGV* 2009-03-23

USE SET_KND
USE OBS_STR
USE IOUNITS
USE OBSHANDLING , ONLY : EN3_LQC_POS,EN3_LGET_PT,EN3_LQC_SAL,&
                       & EN3_LQC_PT,EN3_LQC_TEMP,EN3_LQC_PROF_T,&
                       & EN3_LQC_PROF_S,EN3_LQC_TIME
USE MYFRTPROF, ONLY : MYFRTPROF_WALL

IMPLICIT NONE

CHARACTER(LEN=20) :: CFILE
INTEGER(I4), PARAMETER :: NMAX = 1500000,MAXPROFS = 20000
INTEGER(I4) :: NOBS , IFILE, KOSUM
INTEGER(I4) :: STOBS,ENOBS,TOTOBS
INTEGER(I4), DIMENSION(NMAX) :: OTYPE, OPAR, OPROF
REAL   (R8), DIMENSION(NMAX) :: ODEP,  OVAL, OTIME
REAL   (R8), DIMENSION(NMAX) :: OLON,  OLAT
CHARACTER(LEN=8), DIMENSION(NMAX) :: OPLA
LOGICAL :: LPROCEED, LFLAGS(10), LDUPL, LDUPLA(MAXPROFS)
INTEGER(I4) :: KPRC, KDUPL, JOBS,JPROF,JPROF2, KPIND, KPIND2,UPPROF
LOGICAL :: LLSINGLEOBSEN3

LLSINGLEOBSEN3=.FALSE.

! LOAD SLA OBSERVATIONS

IF ( OBS%SLA .GT. 0 ) THEN
  WRITE(IOUNOUT,*) ' READING IN SLA OBSERVATIONS'
     CALL READSLA
ELSE
    SLA%NO=0
ENDIF
CALL MYFRTPROF_WALL('SLA OBS READ-IN')


! LOAD IN-SITU OBSERVATIONS
KOSUM = OBS%XBT + OBS%GLD + OBS%ARG

IF ( KOSUM .GT. 0 ) THEN

  WRITE(IOUNOUT,*) ' READING IN IN-SITU OBSERVATIONS'

  EN3%NO = NMAX

  ALLOCATE(EN3%INO(EN3%NO),EN3%FLG(EN3%NO),EN3%FLC(EN3%NO),EN3%PAR(EN3%NO))
  ALLOCATE(EN3%LON(EN3%NO),EN3%LAT(EN3%NO),EN3%DPT(EN3%NO),EN3%TIM(EN3%NO))
  ALLOCATE(EN3%VAL(EN3%NO),EN3%BAC(EN3%NO),EN3%INC(EN3%NO),EN3%TDIST(EN3%NO))
  ALLOCATE(EN3%BIA(EN3%NO),EN3%ERR(EN3%NO),EN3%EVE(EN3%NO),EN3%KTY(EN3%NO))
  ALLOCATE(EN3%RES(EN3%NO),EN3%B_A(EN3%NO),EN3%OTYPE(EN3%NO),EN3%PROF(EN3%NO))
  ALLOCATE(EN3%IB(EN3%NO),EN3%JB(EN3%NO),EN3%KB(EN3%NO),EN3%PLNO(EN3%NO))
  ALLOCATE(EN3%PB(EN3%NO),EN3%QB(EN3%NO),EN3%RB(EN3%NO))
  ALLOCATE(EN3%PQ1(EN3%NO),EN3%PQ2(EN3%NO),EN3%PQ3(EN3%NO),EN3%PQ4(EN3%NO))
  ALLOCATE(EN3%PQ5(EN3%NO),EN3%PQ6(EN3%NO),EN3%PQ7(EN3%NO),EN3%PQ8(EN3%NO))

  EN3%FLG(:)=1
  EN3%FLC(:)=0
  EN3%EVE(:)=0
  EN3%BIA(:)=0._R8
  EN3%ERR(:)=100._R8

 !... SET FLAGS FOR EXTRACTION OF OBS
 LFLAGS( 1) = EN3_LQC_POS
 LFLAGS( 2) = EN3_LGET_PT
 LFLAGS( 3) = EN3_LQC_SAL
 LFLAGS( 4) = EN3_LQC_PT
 LFLAGS( 5) = EN3_LQC_TEMP
 LFLAGS( 6) = EN3_LQC_PROF_T
 LFLAGS( 7) = EN3_LQC_PROF_S
 LFLAGS( 8) = EN3_LQC_TIME

  LPROCEED=.TRUE.
  IFILE=1
  TOTOBS=0
  UPPROF=0

  !... LOOP OVER EXISTING EN3 FILES
  DO WHILE(LPROCEED)
      WRITE(CFILE,'(A,I2.2)' ) 'EN3V1D_',IFILE
      INQUIRE(FILE=CFILE,EXIST=LPROCEED)
      IF(LPROCEED) THEN
          WRITE(IOUNLOG,*)
          WRITE(IOUNLOG,*) ' /// READING EN3V1D FILE ',TRIM(CFILE)
          WRITE(IOUNLOG,*)

          CALL READEN3V1D(CFILE,IOUNLOG,NMAX,&
          & LFLAGS(1),LFLAGS(2),LFLAGS(3),LFLAGS(4),LFLAGS(5), &
          & LFLAGS(6),LFLAGS(7),LFLAGS(8),&
          & NOBS,OTYPE,OPAR,ODEP,OVAL,OTIME,OLON,OLAT,OPROF,OPLA)

   !... STORE OBS

          IF(NOBS.GT.0) THEN
            IF(TOTOBS+NOBS .GT. NMAX ) &
            & CALL ABOR1('READINSITU : NMAX MUST BE INCREASED')

            STOBS = TOTOBS +1
            ENOBS = TOTOBS + NOBS

            EN3%OTYPE(STOBS:ENOBS) = OTYPE(1:NOBS)
            EN3%  PAR(STOBS:ENOBS) = OPAR (1:NOBS)
            EN3%  TIM(STOBS:ENOBS) = OTIME(1:NOBS)
            EN3%  DPT(STOBS:ENOBS) = ODEP (1:NOBS)
            EN3%  VAL(STOBS:ENOBS) = OVAL (1:NOBS)
            EN3%  LON(STOBS:ENOBS) = OLON (1:NOBS)
            EN3%  LAT(STOBS:ENOBS) = OLAT (1:NOBS)
            EN3% PROF(STOBS:ENOBS) = OPROF(1:NOBS) + UPPROF
            EN3% PLNO(STOBS:ENOBS)(1:8) = OPLA (1:NOBS)(1:8)

            TOTOBS = TOTOBS + NOBS
            UPPROF = EN3% PROF(ENOBS)

          ENDIF
      ELSE
          IF(IFILE.EQ.1) &
          & WRITE(IOUNERR,*) '*** WARNING : NO EN3V1D FILE'

      ENDIF
      IFILE=IFILE+1
  ENDDO
ELSE

  EN3%NO=0

  IF(LLSINGLEOBSEN3) THEN

    WRITE(IOUNOUT,*) '**** SINGLE_OBSERVATION MODE ****'

    EN3%NO = 1

    ALLOCATE(EN3%INO(EN3%NO),EN3%FLG(EN3%NO),EN3%FLC(EN3%NO),EN3%PAR(EN3%NO))
    ALLOCATE(EN3%LON(EN3%NO),EN3%LAT(EN3%NO),EN3%DPT(EN3%NO),EN3%TIM(EN3%NO))
    ALLOCATE(EN3%VAL(EN3%NO),EN3%BAC(EN3%NO),EN3%INC(EN3%NO),EN3%TDIST(EN3%NO))
    ALLOCATE(EN3%BIA(EN3%NO),EN3%ERR(EN3%NO),EN3%EVE(EN3%NO),EN3%KTY(EN3%NO))
    ALLOCATE(EN3%RES(EN3%NO),EN3%B_A(EN3%NO),EN3%OTYPE(EN3%NO),EN3%PROF(EN3%NO))
    ALLOCATE(EN3%IB(EN3%NO),EN3%JB(EN3%NO),EN3%KB(EN3%NO),EN3%PLNO(EN3%NO))
    ALLOCATE(EN3%PB(EN3%NO),EN3%QB(EN3%NO),EN3%RB(EN3%NO))
    ALLOCATE(EN3%PQ1(EN3%NO),EN3%PQ2(EN3%NO),EN3%PQ3(EN3%NO),EN3%PQ4(EN3%NO))
    ALLOCATE(EN3%PQ5(EN3%NO),EN3%PQ6(EN3%NO),EN3%PQ7(EN3%NO),EN3%PQ8(EN3%NO))

    EN3%FLG(1)=1
    EN3%FLC(1)=0
    EN3%PAR(1)=2
    EN3%LON(1)=-30.28246200000001
    EN3%LAT(1)=56.40858500000000
    EN3%TIM(1)=15649._R8
    EN3%DPT(1)=500
    EN3%OTYPE(1)=401
    EN3%VAL(1)=7.31
    EN3%EVE(1)=0
    EN3%BIA(1)=0._R8
    EN3%ERR(1)=100._R8

  ENDIF

ENDIF

!... FORM DUMMY PROFILE INDEXES

IF(.NOT.LLSINGLEOBSEN3) THEN

 EN3%NO=TOTOBS

 IF(EN3%NO .GT. 0) THEN

  KPRC=0
  ALLOCATE(EN3%PRIND(MAXPROFS))
  EN3%PRIND=-1

  DO JOBS=2,EN3%NO
     IF(EN3% PROF(JOBS) .NE. EN3% PROF(JOBS-1) ) THEN

       KPRC=KPRC+1
       IF(KPRC.GT. MAXPROFS ) &
       & CALL ABOR1('READOBS: MAXPROFS MUST BE INCREASED')

       EN3%PRIND(KPRC) = JOBS

     ENDIF
  ENDDO

  EN3%NPROFS = KPRC

  KDUPL = 0
  OUTER : DO JPROF=1,EN3%NPROFS
     KPIND=EN3%PRIND(JPROF)
     LDUPL = .FALSE.
     LDUPLA(JPROF) = .FALSE.
     INNER : DO JPROF2=1,EN3%NPROFS
        KPIND2=EN3%PRIND(JPROF2)
        IF( LDUPL) CYCLE OUTER
        IF (KPIND.EQ.KPIND2) CYCLE INNER
        IF (EN3%PLNO(KPIND)(1:8) .EQ. EN3%PLNO(KPIND2)(1:8)) THEN
            KDUPL = KDUPL + 1
            LDUPL = .TRUE.
            LDUPLA(JPROF) = .TRUE.
        ENDIF
     ENDDO INNER
  ENDDO OUTER

  DO JPROF=1,EN3%NPROFS
     KPIND=EN3%PRIND(JPROF)
     WRITE(166,*) JPROF,KPIND,EN3%PROF(KPIND),EN3%PLNO(KPIND)(1:8),LDUPLA(JPROF)
  ENDDO

  WRITE(IOUNLOG,*)
  WRITE(IOUNLOG,*) ' /// TOTAL EN3 OBSERVATIONS READ-IN :',EN3%NO
  WRITE(IOUNLOG,*)
  WRITE(IOUNLOG,*) ' NUMBER OF PROFILES : ',EN3%NPROFS
  WRITE(IOUNLOG,*) ' NUMBER OF STATIONS WITH MORE THAN ONE REPORT : ',KDUPL
  WRITE(IOUNLOG,*)

  CALL FLUSH(IOUNLOG)
  CALL FLUSH(166)

 ENDIF
ENDIF
END SUBROUTINE READOBS
