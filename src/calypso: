SUBROUTINE MIN_CFN_M1QN3

!-----------------------------------------------------------------------
!                                                                      !
! MINIMISE THE COST FUNCTION                                           !
!                                                                      !
! VERSION 1: S.DOBRICIC 2006                                           !
!-----------------------------------------------------------------------


 USE SET_KND
 USE DRV_STR
 USE OBS_STR
 USE GRD_STR
 USE EOF_STR
 USE CTL_STR
 USE IOUNITS, ONLY : IOUNOUT, IOUNERR,IOUNLOG
 USE MYFRTPROF, ONLY : MYFRTPROF_WALL

 IMPLICIT NONE

 ! LOCAL VARIABLES
 INTEGER(I4)            :: NRZ, INDIC, NITER0, IMPRES, IO, IMODE(2)
 INTEGER(I4)            :: OMODE, NITER
 INTEGER(I4)            :: NSIM, I, J,IERR
 INTEGER(I4)            :: IZ(5), JK
 REAL(R8)       :: DXMIN, DF1, EPSG
 REAL(R8)       :: XJS, XJE,Z
 REAL(R8), DIMENSION(CTL%N)    :: ZY, X, XGJ
 REAL(R8), ALLOCATABLE :: RZ(:)
 LOGICAL :: L_ABS_CONV, REVERSE
 CHARACTER(LEN=3) :: NORMTYPE
 !... FOR CONS. WITH M1QN3
 INTEGER(I4) :: IZS
 REAL(R8) :: RZS
 REAL(R8) :: DZS

!!!#include "costf.h"

 EXTERNAL COSTF,EUCLID,CTONBE,CTCABE

  CALL MYFRTPROF_WALL('MIN_CFN_M1QN3: MINIMIZE COST FUNCTION',0)

!     COMPUTE THE COST FUNCTION AND ITS GRADIENT AT THE VERY FIRST ITER
!

 L_ABS_CONV =.FALSE.
 WRITE(IOUNLOG,*)
 WRITE(IOUNLOG,*) '============ ENTERING MIN_CFN_M1QN3'
 CALL FLUSH(IOUNOUT)
 INDIC=4
 NITER0=0
 WRITE(IOUNLOG,*) ' DIMENSION : ', CTL%N
 CTL%KITER=0

 CALL COSTF(INDIC,CTL%N,CTL%X_C,XJS,XGJ,NITER0,IZS,RZS,DZS)

 CALL FLUSH(871)
 CALL FLUSH(901)
! STOP 'MIN_CFN'

!     INITIALISATION FOR M1QN3
!

 !... USE EUCLIDEAN NORM TO TEST OPTIMALITY
 NORMTYPE = 'TWO'
 !... INITIAL J
 XJE = XJS
 !... PRECISION (CAN BE INCREASED)
 DXMIN=SQRT(EPSILON(Z))
 !... EXPECTED DECREASE OF J AT 1ST ITER, SET TO 10% OF J
 DF1=CTL%PGPER*XJS
 !... GRADIENT RATIO CRITERION
 EPSG=CTL%PGTOL
 IF (L_ABS_CONV) EPSG = SQRT(EPSG/DOT_PRODUCT(XGJ,XGJ))
 !... VERBOSITY LEVEL, SET TO 3 TO HAVE BASIC INFO AT EACH ITERATION
 IMPRES=12
 !... UNIT FOR PRINTOUT
 IO=IOUNLOG
 !... RUNNING MODE: DIS
 IMODE(1)=0
 !... STARTING MODE: COLD START (NO STORED GRADIENT AT THIS TIME)
 IMODE(2)=0
 !... REVERSE COMM OFF
 REVERSE = .FALSE.
 INDIC = 0
 !... WORKING SIZE (SEE DOCUMENTATION)
 NRZ=(7*CTL%N)
 !... NO OF SIMUL AND ITER, FROM NAMELIST
 NITER=CTL%NIMAX-1
 NSIM=CTL%NSMAX-1
 !... NOT USED (FOR M1QN3 COMPATIBILITY)
 IZS=0
 RZS=0.
 DZS=0.

 ALLOCATE(RZ(NRZ),STAT=IERR)
 IF (IERR .NE. 0) THEN
                 WRITE(IOUNOUT,*) ' CANNOT ALLOCATE RZ'
                 CALL ABOR1('ALLOCATION PROBLEM FOR M1QN3 WORK ARRAY')
 ENDIF

!... OLD M1QN3, NOW USE VERSION 3.2
! CALL M1QN3(COSTF,EUCLID,CTONB,CTCAB,CTL%N,CTL%X_C,XJE,XGJ,DXMIN,DF1, &
!            EPSG,IMPRES,IO,MODE,NITER,NSIM,IZ,RZ,NRZ)

 CALL M1QN3(COSTF,EUCLID,CTONBE,CTCABE,CTL%N,CTL%X_C,XJE,XGJ,DXMIN,DF1, &
          & EPSG,NORMTYPE,IMPRES,IO,IMODE,OMODE,NITER,NSIM,IZ,RZ,NRZ, &
          & REVERSE,INDIC,IZS,RZS,DZS)

 WRITE(IOUNLOG,*) ' *** OUTPUT MODE OF M1QN3=',OMODE,' WHICH MEANS:'

 SELECT CASE(OMODE)

      CASE(:-1)    ! SHOULD NOT HAPPEN
         WRITE(IOUNLOG,*) ' M1QN3 RETURNED NEGATIVE OMODE'
      CASE(0)
         WRITE(IOUNLOG,*) ' M1QN3 ASKS TO STOP'
      CASE(1)
         WRITE(IOUNLOG,*) ' NORMAL EXIT'
      CASE(2)
         WRITE(IOUNLOG,*) ' WRONG M1QN3 INITIALIZATION'
      CASE(3)
         WRITE(IOUNLOG,*) ' LINE-SEARCH BLOCKED'
      CASE(4)
         WRITE(IOUNLOG,*) ' MAX NUMBER OF ITERATION REACHED'
      CASE(5)
         WRITE(IOUNLOG,*) ' MAX NUMBER OF SIMULATIONS REACHED'
      CASE(6)
         WRITE(IOUNLOG,*) ' NOT A DESCENT DIRECTION'
      CASE(7)
         WRITE(IOUNLOG,*) ' ROUNDING ERROR'
      CASE(8:)
         WRITE(IOUNLOG,*) ' UNKNOWN OUTPUT MODE'
 ENDSELECT

 DEALLOCATE(RZ)

CALL MYFRTPROF_WALL('MIN_CFN_M1QN3: MINIMIZE COST FUNCTION',1)

END SUBROUTINE MIN_CFN_M1QN3
