SUBROUTINE RCFL_X(IM,JM,KM,FLD)
USE RECFILTER
USE MYFRTPROF, ONLY : MYFRTPROF_WALL

!-- RECURSIVE FILTER IN X-DIR

 USE SET_KND

 IMPLICIT NONE

 INTEGER(I4)    :: IM, JM, KM

 REAL(R8)       :: FLD(IM,JM,2*KM)
 REAL(R8)       :: B(JM,IMAX), C(JM,IMAX)
 REAL(R8)       :: ALP(JM,IMAX), BTA(JM,IMAX)

 INTEGER(I4)    :: I,J,K, KTR,K2
 INTEGER(I4)    :: NIT

CALL MYFRTPROF_WALL('RCFL_X: X-DIR RECURSIVE FILTER',0)

 KCOUNT(1) = KCOUNT(1)+1
 IF(LLPPT) WRITE(IOUNOUT,*) 'RCFL_X ',KCOUNT(1)

 NIT=RF_NTR

#ifdef SHARED_MEMORY
!$OMP PARALLEL DEFAULT(SHARED),PRIVATE(K2,K,B,C,I,J,KTR,ALP,BTA)
!$OMP DO SCHEDULE(DYNAMIC,1)
#endif
OUTER :   DO K2=1,2*KM
        K=K2
        IF(K>KM.AND..NOT.LLTSAPART) K=K-KM

        B(:,:) = 0.0
        C(:,:) = 0.0

        DO J=1,JM
        DO I=1,IM
           C(J,INX(I,J,K)) = FLD(I,J,K2)
        ENDDO
        ENDDO

!       IF(KTR.GE.RF_LSS) THEN
!         ALP(:,:) = RF_AEX2(:,:,K)
!         BTA(:,:) = RF_BEX2(:,:,K)
!       ELSE
         ALP(:,:) = RF_AEX(:,:,K)
         BTA(:,:) = RF_BEX(:,:,K)
!       ENDIF

        B(:,1) = (1.-ALP(:,1)) * C(:,1)
        DO J= 2,IMX(K)
             B(:,J) = ALP(:,J)*B(:,J-1) + (1.-ALP(:,J))*C(:,J)
        ENDDO

        C(:,IMX(K)) = B(:,IMX(K)) / (1.+BTA(:,IMX(K)))

        DO J=IMX(K)-1,1,-1
            C(:,J) = BTA(:,J)*C(:,J+1) + (1.-BTA(:,J))*B(:,J)
        ENDDO

        B(:,1) = C(:,1) / (1.+ALP(:,1))
        DO J= 2,IMX(K)
             B(:,J) = ALP(:,J)*B(:,J-1) + (1.-ALP(:,J))*C(:,J)
        ENDDO

        C(:,IMX(K)) = (1.-BTA(:,IMX(K))) * (B(:,IMX(K))-BTA(:,IMX(K))**3 * &
        & B(:,IMX(K)-1)) / (1.-BTA(:,IMX(K))**2)**2

        DO J=IMX(K)-1,1,-1
          C(:,J) = BTA(:,J)*C(:,J+1) + (1.-BTA(:,J))*B(:,J)
        ENDDO

        DO KTR = 3,NIT
            B(:,1) = (1.-ALP(:,1)) * (C(:,1)-ALP(:,1)**3 * C(:,2)) / &
            & (1.-ALP(:,1)**2)**2

         DO J= 2,IMX(K)
             B(:,J) = ALP(:,J)*B(:,J-1) + (1.-ALP(:,J))*C(:,J)
         ENDDO

           C(:,IMX(K)) = (1.-BTA(:,IMX(K))) * (B(:,IMX(K))-BTA(:,IMX(K))**3 * &
           & B(:,IMX(K)-1)) / (1.-BTA(:,IMX(K))**2)**2

         DO J=IMX(K)-1,1,-1
          C(:,J) = BTA(:,J)*C(:,J+1) + (1.-BTA(:,J))*B(:,J)
         ENDDO

         ENDDO

        DO J=1,JM
        DO I=1,IM
         FLD(I,J,K2) = C(J,INX(I,J,K))
        ENDDO
        ENDDO

   ENDDO OUTER
#ifdef SHARED_MEMORY
!$OMP END DO
!$OMP END PARALLEL
#endif

CALL MYFRTPROF_WALL('RCFL_X: X-DIR RECURSIVE FILTER',1)
END SUBROUTINE RCFL_X
